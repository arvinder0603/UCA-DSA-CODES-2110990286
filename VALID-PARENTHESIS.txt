O(n2) solution 
//creating all substrings and checking if its valid substring or not


#include <stdio.h>

int main() {
    char s[100];

    printf("Enter a string: ");
    fgets(s, sizeof(s), stdin);

    int ans = 0;

    for (int i = 0; s[i] != '\0'; ++i) {
        int left = 0;
        int right = 0;

        for (int j = i; s[j] != '\0'; j++) {
            if (s[j] == '(') {
                left++;
            } else if (s[j] == ')') {
                right++;
            }

            if (left == right) {
                int a = j - i ;
                if (a > ans) {
                    ans = a;
                }
            } else if (right > left) {
                // If at any point, right parentheses exceed left parentheses, break the inner loop
                break;
            }
        }
    }

    printf("Length of the longest valid parentheses substring: %d\n", ans);

    return 0;
}
